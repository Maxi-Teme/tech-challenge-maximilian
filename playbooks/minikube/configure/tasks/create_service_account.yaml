---
- name: Check if service account exists
  ansible.builtin.command: kubectl --context={{ item }} get serviceaccount deployer
  register: get_serviceaccount_out
  failed_when: get_serviceaccount_out.rc != 0 and "NotFound" not in get_serviceaccount_out.stderr

- name: Create service account on k8s that can manage resources
  ansible.builtin.command: kubectl --context={{ item }} create serviceaccount deployer
  when: get_serviceaccount_out.rc != 0

- name: Apply secret.yaml manifest to create token for service account
  ansible.builtin.command: kubectl --context={{ item }} apply -f /tmp/minikube_configure/secret.yaml

- name: Create cluster role with permissions to manage resources required for deployment
  ansible.builtin.command: kubectl --context={{ item }} apply -f /tmp/minikube_configure/clusterrole.yaml

- name: Check if cluster role binding exists
  ansible.builtin.command: kubectl --context={{ item }} get clusterrolebinding deployer-role-binding
  register: get_clusterrolebinding_out
  failed_when: get_clusterrolebinding_out.rc != 0 and "NotFound" not in get_clusterrolebinding_out.stderr

- name: Create cluster role binding to bind the cluster role to the service account
  ansible.builtin.command: |
    kubectl --context={{ item }} create clusterrolebinding deployer-role-binding \
      --clusterrole=deployer-role \
      --serviceaccount=default:deployer
  when: get_clusterrolebinding_out.rc != 0
